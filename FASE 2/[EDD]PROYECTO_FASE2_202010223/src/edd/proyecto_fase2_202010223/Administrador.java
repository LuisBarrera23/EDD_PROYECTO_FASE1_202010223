/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edd.proyecto_fase2_202010223;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author angel
 */
public class Administrador extends javax.swing.JFrame {

    /**
     * Creates new form Administrador
     */
    public Administrador() {
        initComponents();
        actualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        visualizador = new javax.swing.JLabel();
        b3 = new javax.swing.JButton();
        Comboclientes = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));

        b1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        b1.setText("Carga masiva de clientes");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        b2.setText("Cerrar sesi√≥n");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        visualizador.setBackground(new java.awt.Color(255, 255, 255));
        visualizador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        visualizador.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        visualizador.setOpaque(true);
        jScrollPane1.setViewportView(visualizador);

        b3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        b3.setText("Ver Arbol B de clientes");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        Comboclientes.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setText("Registrar Cliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton2.setText("Modificar cliente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton3.setText("Mostrar datos (reporte)");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton4.setText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton5.setText("Mostrar Clientes por niveles");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Comboclientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(b2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b2)
                            .addComponent(jButton1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(b1)
                        .addGap(18, 18, 18)
                        .addComponent(b3)
                        .addGap(18, 18, 18)
                        .addComponent(Comboclientes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(224, 224, 224)
                        .addComponent(jButton5)
                        .addGap(0, 276, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        // TODO add your handling code here:
        Login l=new Login();
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_b2ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
        cargarclientes();
    }//GEN-LAST:event_b1ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        // TODO add your handling code here:
        try{
            String dot=EDDPROYECTO_FASE2_202010223.clientes2.graficar();
            FileWriter f=new FileWriter("grafico.dot");
            BufferedWriter bufer=new BufferedWriter(f);
            bufer.write(dot);
            bufer.close();
            ProcessBuilder p=new ProcessBuilder("dot","-Tpng","grafico.dot","-o","graficoB.png");
            p.redirectErrorStream(true);
            p.start();
            java.util.concurrent.TimeUnit.SECONDS.sleep(2);
            File archivo = new File("graficoB.png");
            BufferedImage buffer = ImageIO.read(archivo);
            ImageIcon imagen = new ImageIcon(buffer);
            Icon icono = new ImageIcon(imagen.getImage());
            visualizador.setIcon(null);
            visualizador.setIcon(icono);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_b3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RegistroA r=new RegistroA();
        r.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            long dpi=Long.parseLong(Comboclientes.getSelectedItem().toString());
            modificarA m=new modificarA(EDDPROYECTO_FASE2_202010223.clientes2.buscarcliente(dpi));
            m.setVisible(true);
            this.dispose();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        try{
            long dpi=Long.parseLong(Comboclientes.getSelectedItem().toString());
            Cliente cli=EDDPROYECTO_FASE2_202010223.clientes2.buscarcliente(dpi);
            String dot="digraph G{\nnode [shape=plaintext ];\nlabel=\"Reporte datos de usuario\";\n";
            String nodos1="";
            nodos1+="Nodounico[ label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\" width=\"100%\" height=\"100%\">\n";

            nodos1+="<tr>\n"
                    + "<td>Nombre</td>\n"
                    +"<td>DPI</td>\n"
                    +"<td>Contrase√±a</td>\n"
                    +"<td>Imagenes Totales</td>\n"
                    +"<td>Capas totales</td>\n"
                    + "</tr>\n";
            nodos1+="<tr>\n"
                    + "<td>"+cli.getNombre()+"</td>\n"
                    + "<td>"+String.valueOf(cli.getDpi())+"</td>\n"
                    + "<td>"+String.valueOf(cli.getPassword())+"</td>\n"
                    +"<td>"+String.valueOf(cli.imagenes.totalimagenes())+"</td>\n"
                    +"<td>"+String.valueOf(cli.capas.totalcapas())+"</td>\n"
                    + "</tr>\n";
            nodos1+="</table>>];\n";
            
            nodos1+="Nodounico2[ label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\" width=\"100%\" height=\"100%\">\n";

            nodos1+="<tr>\n"
                    + "<td>Nombre del Album</td>\n"
                    +"<td>Imagenes que contiene el album</td>\n"
                    + "</tr>\n";
            
            
            nodos1+=cli.Albunes.tabladatos();
            nodos1+="</table>>];\n";
            dot+=nodos1+"\n}";
            //System.out.println(dot);
            FileWriter f=new FileWriter("grafico.dot");
            BufferedWriter bufer=new BufferedWriter(f);
            bufer.write(dot);
            bufer.close();
            ProcessBuilder p=new ProcessBuilder("dot","-Tpng","grafico.dot","-o","reporte.png");
            p.redirectErrorStream(true);
            p.start();
            java.util.concurrent.TimeUnit.SECONDS.sleep(1);
            File archivo = new File("reporte.png");
            BufferedImage buffer = ImageIO.read(archivo);
            ImageIcon imagen = new ImageIcon(buffer);
            Icon icono = new ImageIcon(imagen.getImage());
            visualizador.setIcon(null);
            visualizador.setIcon(icono);
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try{
            long dpi=Long.parseLong(Comboclientes.getSelectedItem().toString());
            EDDPROYECTO_FASE2_202010223.clientes2.eliminar(dpi);
            actualizar();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try{
            EDDPROYECTO_FASE2_202010223.clientes2.actualizarniveles();
            String dot="digraph G{\nnode [shape=plaintext ];\nlabel=\"Reporte clientes en cada nivel\";\n";
            String nodos1="";
            nodos1+="Nodounico[ label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\" width=\"100%\" height=\"100%\">\n";

            nodos1+="<tr>\n"
                    + "<td>Nombre</td>\n"
                    +"<td>DPI</td>\n"
                    +"<td>Nivel al que pertenece </td>\n"
                    +"<td>cantidad de imagenes</td>\n"
                    + "</tr>\n";
            nodos1+=EDDPROYECTO_FASE2_202010223.clientes2.tablaniveles();
            nodos1+="</table>>];\n";
            
            
            dot+=nodos1+"\n}";
            //System.out.println(dot);
            FileWriter f=new FileWriter("grafico.dot");
            BufferedWriter bufer=new BufferedWriter(f);
            bufer.write(dot);
            bufer.close();
            ProcessBuilder p=new ProcessBuilder("dot","-Tpng","grafico.dot","-o","reporte.png");
            p.redirectErrorStream(true);
            p.start();
            java.util.concurrent.TimeUnit.SECONDS.sleep(1);
            File archivo = new File("reporte.png");
            BufferedImage buffer = ImageIO.read(archivo);
            ImageIcon imagen = new ImageIcon(buffer);
            Icon icono = new ImageIcon(imagen.getImage());
            visualizador.setIcon(null);
            visualizador.setIcon(icono);
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrador().setVisible(true);
            }
        });
    }
    public void cargarclientes() {
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter Filter = new FileNameExtensionFilter("Archivos JSON", "json");
        jfc.setFileFilter(Filter);
        jfc.showOpenDialog(null);
        File archivo = jfc.getSelectedFile();
        //System.out.println(archivo); //imprime ruta absoluta

        if (archivo != null) {
            try {
                BufferedReader obj = new BufferedReader(new FileReader(archivo));
                String texto = "";
                String contenido = "";
                while ((texto = obj.readLine()) != null) {
                    contenido += texto + "\n";
                }
                contenido=contenido.toUpperCase();
                //System.out.println(contenido);
                
                
                JsonParser parser = new JsonParser();
                JsonArray arreglo = parser.parse(contenido).getAsJsonArray();
                for (int i = 0; i < arreglo.size(); i++) {
                    JsonObject objeto = arreglo.get(i).getAsJsonObject();
                    long dpi = objeto.get("DPI").getAsLong();
                    String nombre=objeto.get("NOMBRE_CLIENTE").getAsString();
                    String contra=objeto.get("PASSWORD").getAsString();
                    Cliente nuevo=new Cliente(dpi,nombre,contra);
                    //System.out.println(nuevo.toString());
                    EDDPROYECTO_FASE2_202010223.clientes2.insertar(nuevo);
                }
                //EDDPROYECTO_FASE2_202010223.clientes2.recorrer(EDDPROYECTO_FASE2_202010223.clientes2.raiz);
                actualizar();
                
                
                
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("Error en la lectura del archivo");
            }
        }

    }
    
    public void actualizar(){
        Comboclientes.removeAllItems();
        EDDPROYECTO_FASE2_202010223.clientes2.recorrer3(EDDPROYECTO_FASE2_202010223.clientes2.raiz, this);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox<String> Comboclientes;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel visualizador;
    // End of variables declaration//GEN-END:variables
}
